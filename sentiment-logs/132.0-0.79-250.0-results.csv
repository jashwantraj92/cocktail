"batchId ,",1.0,",overall_accuracy, ",81.6,",step_accuracy, ",81.6,",models, ","Counter({'xception': 1, 'densenet121': 1, 'resnet50': 1})",",",3,",","[('inceptionv4', InceptionV4(
  (stem): Inception_Stem(
    (conv1): Sequential(
      (0): BasicConv2d(
        (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): BasicConv2d(
        (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): BasicConv2d(
        (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (branch3x3_conv): BasicConv2d(
      (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (branch3x3_pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
    (branch7x7a): Sequential(
      (0): BasicConv2d(
        (conv): Conv2d(160, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): BasicConv2d(
        (conv): Conv2d(64, 64, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): BasicConv2d(
        (conv): Conv2d(64, 64, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): BasicConv2d(
        (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (branch7x7b): Sequential(
      (0): BasicConv2d(
        (conv): Conv2d(160, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): BasicConv2d(
        (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (branchpoola): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
    (branchpoolb): BasicConv2d(
      (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (inception_a): Sequential(
    (InceptionA_0): InceptionA(
      (branch3x3stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch3x3): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionA_1): InceptionA(
      (branch3x3stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch3x3): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionA_2): InceptionA(
      (branch3x3stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch3x3): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionA_3): InceptionA(
      (branch3x3stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch3x3): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
  )
  (reduction_a): ReductionA(
    (branch3x3stack): Sequential(
      (0): BasicConv2d(
        (conv): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): BasicConv2d(
        (conv): Conv2d(192, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): BasicConv2d(
        (conv): Conv2d(224, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (branch3x3): BasicConv2d(
      (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (branchpool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (inception_b): Sequential(
    (InceptionB_0): InceptionB(
      (branch7x7stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): BasicConv2d(
          (conv): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch7x7): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionB_1): InceptionB(
      (branch7x7stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): BasicConv2d(
          (conv): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch7x7): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionB_2): InceptionB(
      (branch7x7stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): BasicConv2d(
          (conv): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch7x7): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionB_3): InceptionB(
      (branch7x7stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): BasicConv2d(
          (conv): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch7x7): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionB_4): InceptionB(
      (branch7x7stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): BasicConv2d(
          (conv): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch7x7): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionB_5): InceptionB(
      (branch7x7stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): BasicConv2d(
          (conv): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch7x7): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionB_6): InceptionB(
      (branch7x7stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): BasicConv2d(
          (conv): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch7x7): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(192, 224, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
          (bn): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
  )
  (reduction_b): ReductionB(
    (branch7x7): Sequential(
      (0): BasicConv2d(
        (conv): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): BasicConv2d(
        (conv): Conv2d(256, 256, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): BasicConv2d(
        (conv): Conv2d(256, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        (bn): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): BasicConv2d(
        (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (branch3x3): Sequential(
      (0): BasicConv2d(
        (conv): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): BasicConv2d(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (branchpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  )
  (inception_c): Sequential(
    (InceptionC_0): InceptionC(
      (branch3x3stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(384, 448, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
          (bn): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(448, 512, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
          (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch3x3stacka): BasicConv2d(
        (conv): Conv2d(512, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3stackb): BasicConv2d(
        (conv): Conv2d(512, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3): BasicConv2d(
        (conv): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3a): BasicConv2d(
        (conv): Conv2d(384, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3b): BasicConv2d(
        (conv): Conv2d(384, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionC_1): InceptionC(
      (branch3x3stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(384, 448, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
          (bn): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(448, 512, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
          (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch3x3stacka): BasicConv2d(
        (conv): Conv2d(512, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3stackb): BasicConv2d(
        (conv): Conv2d(512, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3): BasicConv2d(
        (conv): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3a): BasicConv2d(
        (conv): Conv2d(384, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3b): BasicConv2d(
        (conv): Conv2d(384, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (InceptionC_2): InceptionC(
      (branch3x3stack): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): BasicConv2d(
          (conv): Conv2d(384, 448, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
          (bn): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): BasicConv2d(
          (conv): Conv2d(448, 512, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
          (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (branch3x3stacka): BasicConv2d(
        (conv): Conv2d(512, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3stackb): BasicConv2d(
        (conv): Conv2d(512, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3): BasicConv2d(
        (conv): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3a): BasicConv2d(
        (conv): Conv2d(384, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch3x3b): BasicConv2d(
        (conv): Conv2d(384, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branch1x1): BasicConv2d(
        (conv): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (branchpool): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): BasicConv2d(
          (conv): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
  )
  (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
  (dropout): Dropout2d(p=0.19999999999999996, inplace=False)
  (linear): Linear(in_features=1536, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/inceptionv4/inceptionv4-167-best.pth')]"
"batchId ,",2.0,",overall_accuracy, ",83.0,",step_accuracy, ",84.39999999999999,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",","[('xception', Xception(
  (entry_flow): EntryFlow(
    (conv1): Sequential(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv3_residual): Sequential(
      (0): SeperableConv2d(
        (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
        (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): SeperableConv2d(
        (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
        (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    )
    (conv3_shortcut): Sequential(
      (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4_residual): Sequential(
      (0): ReLU(inplace=True)
      (1): SeperableConv2d(
        (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
        (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeperableConv2d(
        (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
        (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    )
    (conv4_shortcut): Sequential(
      (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv5_residual): Sequential(
      (0): ReLU(inplace=True)
      (1): SeperableConv2d(
        (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
        (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): SeperableConv2d(
        (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
    )
    (conv5_shortcut): Sequential(
      (0): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (middel_flow): MiddleFlow(
    (middel_block): Sequential(
      (0): MiddleFLowBlock(
        (shortcut): Sequential()
        (conv1): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): MiddleFLowBlock(
        (shortcut): Sequential()
        (conv1): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): MiddleFLowBlock(
        (shortcut): Sequential()
        (conv1): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): MiddleFLowBlock(
        (shortcut): Sequential()
        (conv1): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): MiddleFLowBlock(
        (shortcut): Sequential()
        (conv1): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): MiddleFLowBlock(
        (shortcut): Sequential()
        (conv1): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (6): MiddleFLowBlock(
        (shortcut): Sequential()
        (conv1): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (7): MiddleFLowBlock(
        (shortcut): Sequential()
        (conv1): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Sequential(
          (0): ReLU(inplace=True)
          (1): SeperableConv2d(
            (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
            (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (exit_flow): ExitFLow(
    (residual): Sequential(
      (0): ReLU()
      (1): SeperableConv2d(
        (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (2): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU()
      (4): SeperableConv2d(
        (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
        (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    )
    (shortcut): Sequential(
      (0): Conv2d(728, 1024, kernel_size=(1, 1), stride=(2, 2))
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv): Sequential(
      (0): SeperableConv2d(
        (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
        (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): SeperableConv2d(
        (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1536, bias=False)
        (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (4): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  )
  (fc): Linear(in_features=2048, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/xception/xception-180-best.pth')]"
"batchId ,",3.0,",overall_accuracy, ",81.73333333333333,",step_accuracy, ",79.2,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",",None
"batchId ,",4.0,",overall_accuracy, ",80.5,",step_accuracy, ",76.8,",models, ","Counter({'densenet121': 1, 'resnet50': 1, 'nasnet': 1})",",",3,",",['nasnet']
"batchId ,",5.0,",overall_accuracy, ",80.64,",step_accuracy, ",81.2,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",","[['nasnet', NasNetA(
  (stem): Sequential(
    (0): Conv2d(3, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (cell_layers): Sequential(
    (0): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (1): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (2): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (3): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (4): ReductionCell(
      (dim_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (layer1block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block2_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block3_left): AvgPool2d(kernel_size=3, stride=2, padding=1)
      (layer1block3_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block1_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer2block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block2_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (layer2block2_right): Sequential()
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (5): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(352, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (6): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(352, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(352, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(352, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (7): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (8): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (9): ReductionCell(
      (dim_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (layer1block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block2_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block3_left): AvgPool2d(kernel_size=3, stride=2, padding=1)
      (layer1block3_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block1_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer2block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block2_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (layer2block2_right): Sequential()
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (10): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(704, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (11): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(704, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(704, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(704, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (12): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (13): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (relu): ReLU()
  (avg): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=1056, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/nasnet/nasnet-182-best.pth']]"
"batchId ,",6.0,",overall_accuracy, ",80.33333333333333,",step_accuracy, ",78.8,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",",None
"batchId ,",7.0,",overall_accuracy, ",80.0,",step_accuracy, ",78.0,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",",None
"batchId ,",8.0,",overall_accuracy, ",79.4,",step_accuracy, ",75.2,",models, ","Counter({'densenet121': 1, 'resnet50': 1, 'nasnet': 1})",",",3,",",['nasnet']
"batchId ,",9.0,",overall_accuracy, ",80.22222222222221,",step_accuracy, ",86.8,",models, ","Counter({'densenet121': 1, 'nasnet': 1})",",",2,",","[('resnet50', ResNet(
  (conv1): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (conv2_x): Sequential(
    (0): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (2): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
  )
  (conv3_x): Sequential(
    (0): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (2): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (3): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
  )
  (conv4_x): Sequential(
    (0): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (2): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (3): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (4): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (5): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
  )
  (conv5_x): Sequential(
    (0): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (2): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
  )
  (avg_pool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=2048, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/resnet50/resnet50-197-best.pth')]"
"batchId ,",10.0,",overall_accuracy, ",80.12,",step_accuracy, ",79.2,",models, ","Counter({'densenet121': 1, 'nasnet': 1})",",",2,",",None
"batchId ,",11.0,",overall_accuracy, ",80.4,",step_accuracy, ",83.2,",models, ",Counter({'densenet121': 1}),",",1,",","[['nasnet', NasNetA(
  (stem): Sequential(
    (0): Conv2d(3, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (cell_layers): Sequential(
    (0): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (1): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (2): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (3): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (4): ReductionCell(
      (dim_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (layer1block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block2_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block3_left): AvgPool2d(kernel_size=3, stride=2, padding=1)
      (layer1block3_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block1_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer2block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block2_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (layer2block2_right): Sequential()
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (5): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(352, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (6): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(352, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(352, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(352, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (7): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (8): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (9): ReductionCell(
      (dim_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (layer1block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block2_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block3_left): AvgPool2d(kernel_size=3, stride=2, padding=1)
      (layer1block3_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block1_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer2block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block2_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (layer2block2_right): Sequential()
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (10): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(704, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (11): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(704, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(704, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(704, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (12): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (13): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (relu): ReLU()
  (avg): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=1056, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/nasnet/nasnet-182-best.pth']]"
"batchId ,",12.0,",overall_accuracy, ",79.93333333333334,",step_accuracy, ",74.8,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",",['resnet50']
"batchId ,",13.0,",overall_accuracy, ",79.75384615384615,",step_accuracy, ",77.60000000000001,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",",None
"batchId ,",14.0,",overall_accuracy, ",80.2,",step_accuracy, ",86.0,",models, ",Counter({'densenet121': 1}),",",1,",","[['resnet50', ResNet(
  (conv1): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (conv2_x): Sequential(
    (0): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (2): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
  )
  (conv3_x): Sequential(
    (0): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (2): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (3): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
  )
  (conv4_x): Sequential(
    (0): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (2): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (3): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (4): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (5): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
  )
  (conv5_x): Sequential(
    (0): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
    (2): BottleNeck(
      (residual_function): Sequential(
        (0): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (7): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Sequential()
    )
  )
  (avg_pool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=2048, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/resnet50/resnet50-197-best.pth']]"
"batchId ,",15.0,",overall_accuracy, ",80.0,",step_accuracy, ",77.2,",models, ",Counter({'densenet121': 1}),",",1,",",None
"batchId ,",16.0,",overall_accuracy, ",79.85,",step_accuracy, ",77.60000000000001,",models, ",Counter({'densenet121': 1}),",",1,",",None
"batchId ,",17.0,",overall_accuracy, ",79.81176470588235,",step_accuracy, ",79.2,",models, ",Counter({'densenet121': 1}),",",1,",",None
"batchId ,",18.0,",overall_accuracy, ",79.86666666666666,",step_accuracy, ",80.80000000000001,",models, ",Counter({'densenet121': 1}),",",1,",",None
"batchId ,",19.0,",overall_accuracy, ",79.74736842105263,",step_accuracy, ",77.60000000000001,",models, ",Counter({'densenet121': 1}),",",1,",",None
"batchId ,",20.0,",overall_accuracy, ",79.52,",step_accuracy, ",75.2,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",",['resnet50']
"batchId ,",21.0,",overall_accuracy, ",79.54285714285714,",step_accuracy, ",80.0,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",",None
"batchId ,",22.0,",overall_accuracy, ",79.54545454545455,",step_accuracy, ",79.60000000000001,",models, ","Counter({'densenet121': 1, 'resnet50': 1})",",",2,",",None
"batchId ,",23.0,",overall_accuracy, ",79.66956521739131,",step_accuracy, ",82.39999999999999,",models, ",Counter({'resnet50': 1}),",",1,",","[('densenet121', DenseNet(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (features): Sequential(
    (dense_block_layer_0): Sequential(
      (bottle_neck_layer_0): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_1): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_2): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_3): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_4): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_5): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
    )
    (transition_layer_0): Transition(
      (down_sample): Sequential(
        (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
    )
    (dense_block_layer_1): Sequential(
      (bottle_neck_layer_0): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_1): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_2): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_3): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_4): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_5): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_6): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_7): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_8): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_9): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_10): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_11): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
    )
    (transition_layer_1): Transition(
      (down_sample): Sequential(
        (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
    )
    (dense_block_layer_2): Sequential(
      (bottle_neck_layer_0): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_1): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_2): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_3): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_4): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_5): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_6): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_7): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_8): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_9): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_10): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_11): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_12): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_13): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_14): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_15): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_16): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_17): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_18): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_19): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_20): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_21): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_22): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_23): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
    )
    (transition_layer_2): Transition(
      (down_sample): Sequential(
        (0): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
    )
    (dense_block3): Sequential(
      (bottle_neck_layer_0): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_1): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_2): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_3): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_4): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_5): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_6): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_7): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_8): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_9): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_10): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_11): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_12): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_13): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_14): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_15): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
    )
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=1024, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/densenet121/Sunday_07_February_2021_14h_15m_18s/densenet121-195-best.pth')]"
"batchId ,",24.0,",overall_accuracy, ",79.68333333333332,",step_accuracy, ",80.0,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",25.0,",overall_accuracy, ",79.776,",step_accuracy, ",82.0,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",26.0,",overall_accuracy, ",79.72307692307692,",step_accuracy, ",78.4,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",27.0,",overall_accuracy, ",79.76296296296296,",step_accuracy, ",80.80000000000001,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",28.0,",overall_accuracy, ",79.88571428571429,",step_accuracy, ",83.2,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",29.0,",overall_accuracy, ",79.82068965517242,",step_accuracy, ",78.0,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",30.0,",overall_accuracy, ",79.97333333333333,",step_accuracy, ",84.39999999999999,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",31.0,",overall_accuracy, ",79.90967741935484,",step_accuracy, ",78.0,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",32.0,",overall_accuracy, ",79.85,",step_accuracy, ",78.0,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",33.0,",overall_accuracy, ",79.76969696969697,",step_accuracy, ",77.2,",models, ",Counter({'resnet50': 1}),",",1,",",None
"batchId ,",34.0,",overall_accuracy, ",79.68235294117648,",step_accuracy, ",76.8,",models, ","Counter({'resnet50': 1, 'densenet121': 1})",",",2,",",['densenet121']
"batchId ,",35.0,",overall_accuracy, ",79.44,",step_accuracy, ",71.2,",models, ","Counter({'resnet50': 1, 'densenet121': 1, 'nasnet': 1})",",",3,",",['nasnet']
"batchId ,",36.0,",overall_accuracy, ",79.47777777777777,",step_accuracy, ",80.80000000000001,",models, ","Counter({'resnet50': 1, 'densenet121': 1, 'nasnet': 1})",",",3,",",None
"batchId ,",37.0,",overall_accuracy, ",79.62162162162161,",step_accuracy, ",84.8,",models, ","Counter({'resnet50': 1, 'nasnet': 1})",",",2,",","[['densenet121', DenseNet(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (features): Sequential(
    (dense_block_layer_0): Sequential(
      (bottle_neck_layer_0): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_1): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_2): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_3): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_4): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_5): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
    )
    (transition_layer_0): Transition(
      (down_sample): Sequential(
        (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
    )
    (dense_block_layer_1): Sequential(
      (bottle_neck_layer_0): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_1): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_2): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_3): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_4): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_5): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_6): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_7): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_8): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_9): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_10): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_11): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
    )
    (transition_layer_1): Transition(
      (down_sample): Sequential(
        (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
    )
    (dense_block_layer_2): Sequential(
      (bottle_neck_layer_0): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_1): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_2): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_3): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_4): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_5): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_6): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_7): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_8): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_9): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_10): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_11): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_12): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_13): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_14): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_15): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_16): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_17): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_18): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_19): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_20): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_21): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_22): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_23): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
    )
    (transition_layer_2): Transition(
      (down_sample): Sequential(
        (0): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
    )
    (dense_block3): Sequential(
      (bottle_neck_layer_0): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_1): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_2): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_3): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_4): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_5): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_6): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_7): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_8): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_9): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_10): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_11): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_12): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_13): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_14): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (bottle_neck_layer_15): Bottleneck(
        (bottle_neck): Sequential(
          (0): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): ReLU(inplace=True)
          (2): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
          (5): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
    )
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=1024, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/densenet121/Sunday_07_February_2021_14h_15m_18s/densenet121-195-best.pth']]"
"batchId ,",38.0,",overall_accuracy, ",79.63157894736842,",step_accuracy, ",80.0,",models, ","Counter({'resnet50': 1, 'nasnet': 1})",",",2,",",None
"batchId ,",39.0,",overall_accuracy, ",79.52820512820513,",step_accuracy, ",75.6,",models, ","Counter({'resnet50': 1, 'nasnet': 1, 'densenet121': 1})",",",3,",",['densenet121']
"batchId ,",40.0,",overall_accuracy, ",79.62,",step_accuracy, ",83.2,",models, ","Counter({'resnet50': 1, 'densenet121': 1})",",",2,",","[['nasnet', NasNetA(
  (stem): Sequential(
    (0): Conv2d(3, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (cell_layers): Sequential(
    (0): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (1): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(44, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (2): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (3): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44, bias=False)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(44, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=44)
            (pointwise): Conv2d(44, 44, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 22, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (4): ReductionCell(
      (dim_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (layer1block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block2_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block3_left): AvgPool2d(kernel_size=3, stride=2, padding=1)
      (layer1block3_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block1_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer2block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block2_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (layer2block2_right): Sequential()
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (5): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(352, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(264, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (6): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(352, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(352, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(352, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (7): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (8): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88)
            (pointwise): Conv2d(88, 88, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 44, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (9): ReductionCell(
      (dim_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (layer1block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block2_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer1block3_left): AvgPool2d(kernel_size=3, stride=2, padding=1)
      (layer1block3_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block1_left): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer2block1_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2block2_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (layer2block2_right): Sequential()
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (10): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(704, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(528, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (11): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(704, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(704, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(704, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (12): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (13): NormalCell(
      (dem_reduce): Sequential(
        (0): ReLU()
        (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (block1_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block1_right): Sequential()
      (block2_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block2_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block3_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block3_right): Sequential()
      (block4_left): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block4_right): AvgPool2d(kernel_size=3, stride=1, padding=1)
      (block5_left): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (block5_right): SeperableBranch(
        (block1): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176, bias=False)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (block2): Sequential(
          (0): ReLU()
          (1): SeperableConv2d(
            (depthwise): Conv2d(176, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=176)
            (pointwise): Conv2d(176, 176, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (fit): Fit(
        (relu): ReLU()
        (p1): Sequential(
          (0): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (1): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (p2): Sequential(
          (0): ConstantPad2d(padding=(0, 1, 0, 1), value=0)
          (1): ConstantPad2d(padding=(-1, 0, -1, 0), value=0)
          (2): AvgPool2d(kernel_size=1, stride=2, padding=0)
          (3): Conv2d(1056, 88, kernel_size=(1, 1), stride=(1, 1))
        )
        (bn): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dim_reduce): Sequential(
          (0): ReLU()
          (1): Conv2d(1056, 176, kernel_size=(1, 1), stride=(1, 1))
          (2): BatchNorm2d(176, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (relu): ReLU()
  (avg): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=1056, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/nasnet/nasnet-182-best.pth']]"
