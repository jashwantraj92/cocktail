"batchId ,",1.0,",overall_accuracy, ",79.2,",step_accuracy, ",79.2,",models, ","Counter({'resnet18': 1, 'squeezenet': 1, 'mobilenetv2': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",2.0,",overall_accuracy, ",78.8,",step_accuracy, ",78.4,",models, ","Counter({'resnet18': 1, 'squeezenet': 1, 'mobilenetv2': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",3.0,",overall_accuracy, ",77.2,",step_accuracy, ",74.0,",models, ","Counter({'resnet18': 1, 'squeezenet': 1, 'mobilenetv2': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",4.0,",overall_accuracy, ",76.3,",step_accuracy, ",73.6,",models, ","Counter({'resnet18': 1, 'squeezenet': 1, 'mobilenetv2': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",5.0,",overall_accuracy, ",77.52,",step_accuracy, ",82.39999999999999,",models, ","Counter({'resnet18': 1, 'squeezenet': 1, 'shufflenet': 1})",",",3,",","[('mobilenetv2', MobileNetV2(
  (pre): Sequential(
    (0): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU6(inplace=True)
  )
  (stage1): LinearBottleNeck(
    (residual): Sequential(
      (0): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU6(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU6(inplace=True)
      (6): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
      (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (stage2): Sequential(
    (0): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96)
        (4): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144)
        (4): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (stage3): Sequential(
    (0): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144)
        (4): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192)
        (4): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192)
        (4): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (stage4): Sequential(
    (0): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192)
        (4): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
        (4): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
        (4): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (3): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
        (4): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (stage5): Sequential(
    (0): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
        (4): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576)
        (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576)
        (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (stage6): Sequential(
    (0): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576)
        (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960)
        (4): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): LinearBottleNeck(
      (residual): Sequential(
        (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU6(inplace=True)
        (3): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960)
        (4): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU6(inplace=True)
        (6): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1))
        (7): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (stage7): LinearBottleNeck(
    (residual): Sequential(
      (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU6(inplace=True)
      (3): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960)
      (4): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU6(inplace=True)
      (6): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1))
      (7): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (conv1): Sequential(
    (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU6(inplace=True)
  )
  (conv2): Conv2d(1280, 100, kernel_size=(1, 1), stride=(1, 1))
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/mobilenetv2/mobilenetv2-162-best.pth')]"
"batchId ,",6.0,",overall_accuracy, ",76.6,",step_accuracy, ",72.0,",models, ","Counter({'resnet18': 1, 'squeezenet': 1, 'shufflenet': 1, 'mobilenetv2': 1})",",",4,",",['mobilenetv2']
"batchId ,",7.0,",overall_accuracy, ",76.68571428571428,",step_accuracy, ",77.2,",models, ","Counter({'resnet18': 1, 'squeezenet': 1, 'shufflenet': 1, 'mobilenetv2': 1})",",",4,",",None
"batchId ,",8.0,",overall_accuracy, ",76.75,",step_accuracy, ",77.2,",models, ","Counter({'resnet18': 1, 'squeezenet': 1, 'shufflenet': 1, 'mobilenetv2': 1})",",",4,",",None
"batchId ,",9.0,",overall_accuracy, ",77.11111111111111,",step_accuracy, ",80.0,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1})",",",3,",","[('squeezenet', SqueezeNet(
  (stem): Sequential(
    (0): Conv2d(3, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fire2): Fire(
    (squeeze): Sequential(
      (0): Conv2d(96, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire3): Fire(
    (squeeze): Sequential(
      (0): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire4): Fire(
    (squeeze): Sequential(
      (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire5): Fire(
    (squeeze): Sequential(
      (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire6): Fire(
    (squeeze): Sequential(
      (0): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire7): Fire(
    (squeeze): Sequential(
      (0): Conv2d(384, 48, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire8): Fire(
    (squeeze): Sequential(
      (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire9): Fire(
    (squeeze): Sequential(
      (0): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (conv10): Conv2d(512, 100, kernel_size=(1, 1), stride=(1, 1))
  (avg): AdaptiveAvgPool2d(output_size=1)
  (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/squeezenet/squeezenet-195-best.pth')]"
"batchId ,",10.0,",overall_accuracy, ",76.88000000000001,",step_accuracy, ",74.8,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",4,",",['squeezenet']
"batchId ,",11.0,",overall_accuracy, ",76.76363636363637,",step_accuracy, ",75.6,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",12.0,",overall_accuracy, ",76.56666666666668,",step_accuracy, ",74.4,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",13.0,",overall_accuracy, ",76.67692307692307,",step_accuracy, ",78.0,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",14.0,",overall_accuracy, ",76.57142857142857,",step_accuracy, ",75.2,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",15.0,",overall_accuracy, ",76.66666666666667,",step_accuracy, ",78.0,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",16.0,",overall_accuracy, ",76.47500000000001,",step_accuracy, ",73.6,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",17.0,",overall_accuracy, ",76.32941176470588,",step_accuracy, ",74.0,",models, ","Counter({'resnet18': 1, 'shufflenet': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",18.0,",overall_accuracy, ",76.53333333333333,",step_accuracy, ",80.0,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",3,",","[('shufflenet', ShuffleNet(
  (conv1): BasicConv2d(
    (conv): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
  )
  (stage2): Sequential(
    (0): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(24, 60, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(60, 60, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=60)
          (1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(60, 216, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): AvgPool2d(kernel_size=3, stride=2, padding=1)
    )
    (1): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(60, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60)
          (1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(60, 240, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(60, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60)
          (1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(60, 240, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(60, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60)
          (1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(60, 240, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (stage3): Sequential(
    (0): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(240, 120, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=120)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(120, 240, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): AvgPool2d(kernel_size=3, stride=2, padding=1)
    )
    (1): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (stage4): Sequential(
    (0): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(480, 240, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=240)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(240, 480, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): AvgPool2d(kernel_size=3, stride=2, padding=1)
    )
    (1): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(960, 240, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(240, 960, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(960, 240, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(240, 960, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): ShuffleNetUnit(
      (bottlneck): Sequential(
        (0): PointwiseConv2d(
          (pointwise): Sequential(
            (0): Conv2d(960, 240, kernel_size=(1, 1), stride=(1, 1), groups=3)
            (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ReLU(inplace=True)
      )
      (channel_shuffle): ChannelShuffle()
      (depthwise): DepthwiseConv2d(
        (depthwise): Sequential(
          (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (expand): PointwiseConv2d(
        (pointwise): Sequential(
          (0): Conv2d(240, 960, kernel_size=(1, 1), stride=(1, 1), groups=3)
          (1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (relu): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avg): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=960, out_features=100, bias=True)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/shufflenet/Saturday_06_February_2021_21h_40m_29s/shufflenet-200-regular.pth')]"
"batchId ,",19.0,",overall_accuracy, ",76.52631578947368,",step_accuracy, ",76.4,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",3,",",None
"batchId ,",20.0,",overall_accuracy, ",76.62,",step_accuracy, ",78.4,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1})",",",3,",",None
"batchId ,",21.0,",overall_accuracy, ",76.55238095238094,",step_accuracy, ",75.2,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",['shufflenet']
"batchId ,",22.0,",overall_accuracy, ",76.56363636363636,",step_accuracy, ",76.8,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",23.0,",overall_accuracy, ",76.5391304347826,",step_accuracy, ",76.0,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",24.0,",overall_accuracy, ",76.5,",step_accuracy, ",75.6,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",25.0,",overall_accuracy, ",76.52799999999999,",step_accuracy, ",77.2,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",26.0,",overall_accuracy, ",76.38461538461539,",step_accuracy, ",72.8,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",27.0,",overall_accuracy, ",76.35555555555555,",step_accuracy, ",75.6,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",28.0,",overall_accuracy, ",76.18571428571428,",step_accuracy, ",71.6,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",29.0,",overall_accuracy, ",76.30344827586207,",step_accuracy, ",79.60000000000001,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'squeezenet': 1, 'shufflenet': 1})",",",4,",",None
"batchId ,",30.0,",overall_accuracy, ",76.42666666666666,",step_accuracy, ",80.0,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1})",",",3,",","[['squeezenet', SqueezeNet(
  (stem): Sequential(
    (0): Conv2d(3, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fire2): Fire(
    (squeeze): Sequential(
      (0): Conv2d(96, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire3): Fire(
    (squeeze): Sequential(
      (0): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire4): Fire(
    (squeeze): Sequential(
      (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire5): Fire(
    (squeeze): Sequential(
      (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire6): Fire(
    (squeeze): Sequential(
      (0): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire7): Fire(
    (squeeze): Sequential(
      (0): Conv2d(384, 48, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire8): Fire(
    (squeeze): Sequential(
      (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire9): Fire(
    (squeeze): Sequential(
      (0): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (conv10): Conv2d(512, 100, kernel_size=(1, 1), stride=(1, 1))
  (avg): AdaptiveAvgPool2d(output_size=1)
  (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/squeezenet/squeezenet-195-best.pth']]"
"batchId ,",31.0,",overall_accuracy, ",76.3741935483871,",step_accuracy, ",74.8,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",['squeezenet']
"batchId ,",32.0,",overall_accuracy, ",76.4375,",step_accuracy, ",78.4,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",33.0,",overall_accuracy, ",76.47272727272727,",step_accuracy, ",77.60000000000001,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",34.0,",overall_accuracy, ",76.41176470588236,",step_accuracy, ",74.4,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",35.0,",overall_accuracy, ",76.38857142857142,",step_accuracy, ",75.6,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",36.0,",overall_accuracy, ",76.34444444444445,",step_accuracy, ",74.8,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",37.0,",overall_accuracy, ",76.17297297297297,",step_accuracy, ",70.0,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",38.0,",overall_accuracy, ",76.2,",step_accuracy, ",77.2,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",39.0,",overall_accuracy, ",76.22564102564102,",step_accuracy, ",77.2,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1, 'squeezenet': 1})",",",4,",",None
"batchId ,",40.0,",overall_accuracy, ",76.32,",step_accuracy, ",80.0,",models, ","Counter({'resnet18': 1, 'mobilenetv2': 1, 'shufflenet': 1})",",",3,",","[['squeezenet', SqueezeNet(
  (stem): Sequential(
    (0): Conv2d(3, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fire2): Fire(
    (squeeze): Sequential(
      (0): Conv2d(96, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire3): Fire(
    (squeeze): Sequential(
      (0): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire4): Fire(
    (squeeze): Sequential(
      (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire5): Fire(
    (squeeze): Sequential(
      (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire6): Fire(
    (squeeze): Sequential(
      (0): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire7): Fire(
    (squeeze): Sequential(
      (0): Conv2d(384, 48, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire8): Fire(
    (squeeze): Sequential(
      (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (fire9): Fire(
    (squeeze): Sequential(
      (0): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_1x1): Sequential(
      (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (expand_3x3): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (conv10): Conv2d(512, 100, kernel_size=(1, 1), stride=(1, 1))
  (avg): AdaptiveAvgPool2d(output_size=1)
  (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
), '/home/cc/cocktail/pytorch-cifar100/checkpoint/models/squeezenet/squeezenet-195-best.pth']]"
